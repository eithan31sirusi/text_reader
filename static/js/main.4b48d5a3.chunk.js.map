{"version":3,"sources":["FlexContainerStyled.js","TextReaderStyled.js","SVGContainer.js","TextReader.jsx","GlobalStyles.js","App.js","index.js"],"names":["FlexContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","align","justify","direction","height","width","margin","Container","TextArea","textarea","_templateObject2","Button","button","_templateObject3","Dropdown","select","_templateObject4","SpeakButton","_templateObject5","background","SpeedRange","input","attrs","type","_templateObject6","size","TextReader","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","voices","setVoices","_useState5","_useState6","selectedVoice","setSelectedVoice","_useState7","_useState8","rate","setRate","_useState9","_useState10","position","setPosition","_useState11","_useState12","isPaused","setIsPaused","useEffect","availableVoices","window","speechSynthesis","getVoices","onvoiceschanged","handleResume","handleSpeak","startPos","arguments","length","undefined","cancel","utterance","SpeechSynthesisUtterance","slice","voice","onboundary","event","charIndex","speak","React","createElement","value","onChange","e","target","placeholder","name","find","v","map","index","key","lang","min","max","step","onClick","newPos","Math","pause","resume","GlobalStyles","createGlobalStyle","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4b48d5a3.chunk.js","sourcesContent":["// FlexContainerStyled.js\r\nimport styled from \"styled-components\";\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  align-items: ${(props) => props.align || \"center\"}; // Vertical alignment\r\n  justify-content: ${(props) =>\r\n    props.justify || \"center\"}; // Horizontal alignment\r\n  flex-direction: ${(props) =>\r\n    props.direction || \"row\"}; // Direction of the flex items\r\n  height: ${(props) => props.height || \"auto\"};\r\n  width: ${(props) => props.width || \"auto\"};\r\n  margin: ${(props) => props.margin || \"auto\"};\r\n`;\r\n","// TextReaderStyled.js\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: #e0d3af; // A color reminiscent of old paper\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1); // A soft shadow for depth\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n  width: 50%;\r\n  height: 200px;\r\n  padding: 10px;\r\n  border: 1px solid #b5a895; // A soft brown border\r\n  border-radius: 5px;\r\n  resize: none;\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: #b5a895; // A soft brown color\r\n  color: white;\r\n  padding: 10px 20px;\r\n  margin: 1rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #9c8b76; // A slightly darker brown on hover\r\n  }\r\n`;\r\n\r\nexport const Dropdown = styled.select`\r\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 6px #b8b8b8, -3px -3px 6px #ffffff;\r\n  appearance: none; // Removes default appearance\r\n  font-size: 16px;\r\n  margin: 1rem;\r\n  text-align: center;\r\n  option {\r\n    background-color: #f0f0f0;\r\n    padding: 10px;\r\n  }\r\n\r\n  &:hover {\r\n    background: linear-gradient(145deg, #f0f0f0, #cacaca);\r\n  }\r\n`;\r\n\r\nexport const SpeakButton = styled(Button)`\r\n  // Extending the previous Button styles\r\n  background: ${(props) =>\r\n    props.background || \"linear-gradient(145deg, #757575, #9e9e9e)\"};\r\n  box-shadow: 3px 3px 6px #6c6c6c, -3px -3px 6px #a6a6a6;\r\n  margin: ${(props) => props.margin || \"auto\"};\r\n  min-width: 5.5rem;\r\n  min-height: 5.5rem;\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background: linear-gradient(145deg, #9e9e9e, #757575);\r\n  }\r\n`;\r\n\r\nexport const SpeedRange = styled.input.attrs({ type: \"range\" })`\r\n  appearance: none;\r\n  width: 100%;\r\n  height: 5px;\r\n  border-radius: 5px;\r\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\r\n  outline: none;\r\n  padding: 0;\r\n  margin: 20px 0;\r\n\r\n  &::-webkit-slider-thumb {\r\n    appearance: none;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: linear-gradient(145deg, #757575, #9e9e9e);\r\n    cursor: pointer;\r\n    box-shadow: 3px 3px 6px #6c6c6c, -3px -3px 6px #a6a6a6;\r\n    transition: background 0.3s;\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: linear-gradient(145deg, #757575, #9e9e9e);\r\n    cursor: pointer;\r\n    box-shadow: 3px 3px 6px #6c6c6c, -3px -3px 6px #a6a6a6;\r\n    transition: background 0.3s;\r\n  }\r\n\r\n  &:hover::-webkit-slider-thumb {\r\n    background: linear-gradient(145deg, #9e9e9e, #757575);\r\n  }\r\n\r\n  &:hover::-moz-range-thumb {\r\n    background: linear-gradient(145deg, #9e9e9e, #757575);\r\n  }\r\n`;\r\n\r\n// Add styles for other elements like dropdown and range input\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSVGContainer = styled.div`\r\n  display: inline-block;\r\n  width: ${(props) => props.size || \"24px\"};\r\n  height: ${(props) => props.size || \"24px\"};\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nfunction SVGContainer({ svg, size, margin }) {\r\n  return (\r\n    <StyledSVGContainer size={size} margin={margin}>\r\n      {svg}\r\n    </StyledSVGContainer>\r\n  );\r\n}\r\n\r\nexport default SVGContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FlexContainer } from \"./FlexContainerStyled\";\r\nimport {\r\n  Container,\r\n  TextArea,\r\n  Dropdown,\r\n  SpeakButton, // This is the Play/Resume button, but we're keeping the styled component name for simplicity.\r\n  SpeedRange,\r\n  // ... other styled components\r\n} from \"./TextReaderStyled\";\r\nimport SVGContainer from \"./SVGContainer\";\r\nimport PasueSvg from \"./assets/PasueSVG.jsx\";\r\n\r\nfunction TextReader() {\r\n  const [text, setText] = useState(\"\");\r\n  const [voices, setVoices] = useState([]);\r\n  const [selectedVoice, setSelectedVoice] = useState(null);\r\n  const [rate, setRate] = useState(1);\r\n  const [position, setPosition] = useState(0); // Track the current position in the text\r\n  const [isPaused, setIsPaused] = useState(false); // Track if the speech is paused\r\n\r\n  useEffect(() => {\r\n    // Fetch available voices\r\n    const availableVoices = window.speechSynthesis.getVoices();\r\n    setVoices(availableVoices);\r\n\r\n    // Listen for the 'voiceschanged' event\r\n    window.speechSynthesis.onvoiceschanged = () => {\r\n      setVoices(window.speechSynthesis.getVoices());\r\n    };\r\n  }, [selectedVoice]);\r\n\r\n  const handlePlay = () => {\r\n    if (isPaused) {\r\n      window.speechSynthesis.resume();\r\n      setIsPaused(false);\r\n    } else {\r\n      handleSpeak();\r\n    }\r\n  };\r\n\r\n  const handleResume = () => {\r\n    handleSpeak(0); // Start from the beginning\r\n  };\r\n\r\n  const handleSpeak = (startPos = 0) => {\r\n    window.speechSynthesis.cancel(); // Stop any ongoing speech\r\n    const utterance = new SpeechSynthesisUtterance(text.slice(startPos));\r\n    utterance.rate = rate;\r\n    if (selectedVoice) {\r\n      utterance.voice = selectedVoice;\r\n    }\r\n    utterance.onboundary = (event) => {\r\n      setPosition(event.charIndex);\r\n    };\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    window.speechSynthesis.pause();\r\n    setIsPaused(true);\r\n  };\r\n\r\n  const handleBackward = () => {\r\n    const newPos = Math.max(position - 30, 0); // Go back by 30 characters\r\n    handleSpeak(newPos);\r\n  };\r\n\r\n  const handleForward = () => {\r\n    const newPos = Math.min(position + 30, text.length); // Go forward by 30 characters\r\n    handleSpeak(newPos);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FlexContainer align=\"center\" justify=\"flex-start\" direction=\"column\">\r\n        {\" \"}\r\n        <h2>Eithan Text Reader</h2>\r\n        <TextArea\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Enter text to read...\"\r\n        ></TextArea>\r\n        <div>\r\n          <label>\r\n            <Dropdown\r\n              value={selectedVoice ? selectedVoice.name : \"\"}\r\n              onChange={(e) => {\r\n                const voice = voices.find((v) => v.name === e.target.value);\r\n                setSelectedVoice(voice);\r\n                handleResume();\r\n              }}\r\n            >\r\n              {voices.map((voice, index) => (\r\n                <option key={index} value={voice.name}>\r\n                  {voice.name} ({voice.lang})\r\n                </option>\r\n              ))}\r\n            </Dropdown>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <SpeedRange\r\n              type=\"range\"\r\n              min=\"0.5\"\r\n              max=\"2\"\r\n              step=\"0.3\"\r\n              value={rate}\r\n              onChange={(e) => setRate(e.target.value)}\r\n            />\r\n            {rate}\r\n          </label>\r\n        </div>\r\n        <FlexContainer>\r\n          <SpeakButton margin=\"1rem\" onClick={handleBackward}>\r\n            Backward\r\n          </SpeakButton>\r\n          <SpeakButton margin=\"1rem\" onClick={handlePause}>\r\n            Pause\r\n          </SpeakButton>\r\n          <SpeakButton margin=\"1rem\" onClick={handlePlay}>\r\n            Play\r\n          </SpeakButton>\r\n          <SpeakButton margin=\"1rem\" onClick={handleResume}>\r\n            Resume\r\n          </SpeakButton>\r\n          <SpeakButton margin=\"1rem\" onClick={handleForward}>\r\n            Forward\r\n          </SpeakButton>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TextReader;\r\n","// GlobalStyles.js\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    font-family: 'Arial', sans-serif;\r\n    background-color: #f4e8c1; // A light beige color reminiscent of book pages\r\n    color: #333; // Dark text color for contrast\r\n    padding: 20px;\r\n  }\r\n\r\n  // Any other global styles can be added here\r\n`;\r\n","import React from \"react\";\nimport TextReader from \"./TextReader\";\n\nimport { GlobalStyles } from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <div >\n      <GlobalStyles/>\n      <TextReader />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}